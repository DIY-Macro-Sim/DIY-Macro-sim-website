{
  "hash": "9db263791617fb4b86fa1bdeadd8a954",
  "result": {
    "engine": "knitr",
    "markdown": "# A Lewis Model of Economic Development {#sec-lewis}\n\n## Overview\n\nThis model captures some key features of W. Arthur @Lewis1954' two-sector model of the growth process of a developing country. The model describes the development process as one where a modern urban sector draws labour inputs from a traditional subsistence sector that is characterised by surplus labour, i.e. labour that does not produce any additional output (reflected in a zero marginal product). Workers in the traditional sector are paid a fixed subsistence wage. The presence of surplus labour allows the modern sector to attract workers from the traditional sector for a small wage premium above the subsistence wage. This enables the modern sector to make excess profits that are reinvested and thus drive rapid capital accumulation in the modern sector. As a result, the economy undergoes industrialisation. This process of rapid structural change comes to an end when the surplus labour in the traditional sector is depleted. Labour supply then becomes sensitive to the real wage, leading to a slowdown in the growth of profits and capital accumulation.\n\nWe present a formal version of the model that is adapted from the graphical representation in @Todaro2015, pp. 124-127.\n\n## The Model\n\n$$\n    Y_{1t}= \n\\begin{cases}\n    \\lambda^\\alpha, &    \\text{if } L_{1t-1} > \\lambda \\\\\n    L^\\alpha_{1t},& \\text{if } L_{1t-1}\\leq \\lambda\n\\end{cases}\n$$ {#eq-lewis_Y1}\n\n$$\nw_{1t} = w^S  \n$$ {#eq-lewis_w1}\n\n$$\nL_{1t} = L - L_{2t}  \n$$ {#eq-lewis_L1}\n\n$$\nY_{2t} = L_{2t}^\\beta K_{2t}^{1-\\beta}  \n$$ {#eq-lewis_Y2}\n\n$$\n    w_{2t}= \n\\begin{cases}\n    w^S(1 + \\rho), &    \\text{if } L_{1t-1} > \\lambda \\\\\n    \\gamma L_{2t},& \\text{if } L_{1t-1}\\leq \\lambda\n\\end{cases}\n$$ {#eq-lewis_w2}\n\n$$\nMPL_{2t}= \\frac{\\partial Y_{2t}}{\\partial L_{2t}} = \\frac{\\beta Y_{2t}}{L_{2t}}\n$$ {#eq-lewis_MPL}\n\n$$\nL_{2t}= L_{2t-1} + \\delta(MPL_{2t-1} - w_{2t-1})\n$$ {#eq-lewis_L2}\n\n$$\nP_{2t}=Y_{2t} - w_{2t}L_{2t}\n$$ {#eq-lewis_P2}\n\n$$\nK_{2t}=K_{2t-1} + P_{2t-1}\n$$ {#eq-lewis_K2}\n\nwhere the subscripts 1 and 2 refer to the traditional and modern sector, respectively, and $Y_t$, $w_t$, $L_t$, $MPL_t$, $K_t$, and $P_t$ represent output, the real wage rate, employment,  the marginal product of labour, the capital stock, and profits, respectively.\n\n @eq-lewis_Y1 describes output determination in the traditional sector. The variable $\\lambda$ is the employment level beyond which the marginal product of labour (MPL) in sector 1 becomes zero. As long as employment is above this threshold, there is surplus labour and output is fixed at the level implied by the level of employment for which the MPL becomes zero ($\\lambda$). If actual employment falls below this level, the sector faces a production function that is increasing in employment but with diminishing marginal returns $(\\alpha \\in (0,1))$. By @eq-lewis_w1, the real wage in the traditional sector is an exogenously given subsistence wage $w^S$. @eq-lewis_L1 says that the level of employment in the traditional sector is residually determined by the total labour supply net of employment in the modern sector. Total labour is taken to be exogenous. Unlike the traditional sector, the modern sector employs capital. @eq-lewis_Y2 is the production function of the modern sector, which exhibits constant returns to scale and diminishing marginal returns $(\\beta\\in (0,1))$. @eq-lewis_w2 specifies wage determination in the modern sector. If there is surplus labour in the traditional sector, the modern sector pays a wage premium $\\rho$ on the subsistence wage. As soon as surplus labour is depleted, the modern sector faces an upward-sloping labour supply curve, which we model for simplicity as a linear function with slope coefficient $\\gamma$. @eq-lewis_MPL specifies the marginal product of labour of the modern sector: $MPL_{2t}=\\beta L_{2t}^{\\beta-1} K_{2t}^{1-\\beta} = \\beta \\frac{Y_{2t}}{L_{2t}}$. @eq-lewis_L2 is the labour demand curve of the modern sector. To maximise profits, the firm would have to equalise the real wage and the MPL: $w_{2t}=MPL_{2t}$. @eq-lewis_L2 specifies this as a gradual process, where the rate at which the modern firm attracts workers from the traditional sector is increasing in the gap between their marginal product and the fixed wage the firm pays these workers. Finally, @eq-lewis_P2 defines profits in the modern sector, and @eq-lewis_K2 describes capital accumulation in that sector, where it is assumed that all profits are invested $(P_{2t}=I_{2t})$.\n\n## Simulation\n\n### Parameterisation\n\nTable reports the parameterisation used in the simulation. All scenarios are initialised such that there is surplus labour ($L_{10} > \\lambda$).\n\n**Table 1: Parameterisation**\n\n|     Scenario                                    | $L$ | $\\lambda$ | $\\alpha$ | $\\beta$ | $\\delta$ | $w^S$ | $\\gamma$ |\n|-------------------------------------------------|-----|-----------|----------|---------|------------|-------|----------|\n| 1: baseline                                     | 20  | 10        | 0.9      | 0.7     | 0.5        | 0.4   | 0.12     |\n| 2: rise subsistence wage ($w^S$)                | 20  | 10        | 0.9      | 0.7     | 0.5        | 0.3   | 0.12     |\n| 3: rise in labour supply elasticity ($\\gamma$)  | 20  | 10        | 0.9      | 0.7     | 0.5        | 0.4   | 0.17     |\n\n\n\n### Simulation code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clear the environment\nrm(list=ls(all=TRUE))\n\n# Set number of periods\nQ=250\n\n# Set number of scenarios (including baseline)\nS=3\n\n# Set period in which shock/shift will occur\ns=1\n\n# Create (S x Q)-matrices that will contain the simulated data\nY1=matrix(data=1,nrow=S,ncol=Q) # Output in sector 1 (traditional)\nY2=matrix(data=1,nrow=S,ncol=Q) # Output in sector 2 (modern)\nL1=matrix(data=1,nrow=S,ncol=Q) # employment in sector 1\nL2=matrix(data=1,nrow=S,ncol=Q) # employment in sector 2\nw2=matrix(data=1,nrow=S,ncol=Q) # real wage sector 2\nMPL2 = matrix(data=1, nrow=S, ncol=Q) # marginal product of labour in sector 2\nK=matrix(data=1,nrow=S,ncol=Q) # capital stock (only in sector 2)\nP2=matrix(data=1,nrow=S,ncol=Q) #  profits in sector 2\n\n# Set fixed parameter values\nalpha=0.9 # labour elasticity of output, sector 1\nrho=1     # wage premium\nL=20      # total labour supply (exogenous)\nlambda=10 # employment at which MPL in sector 1 becomes zero\nbeta=0.7  # labour elasticity of output, sector 2\ndelta = 0.5  # sensitivity of employment in sector 2 to deviation of MPL2 from w2\n\n# Set baseline parameter values\nw1=matrix(data=0.4,nrow=S,ncol=Q) # subsistence real wage sector 1\ngamma=matrix(data=0.12, nrow=S, ncol=Q) # labour supply coefficient, sector 2\n\n# Set parameter values for different scenarios\nw1[2,s:Q]=0.3         # scenario 2: fall in subsistence wage\ngamma[3,s:Q]=0.17     # scenario 3: rise in labour supply elasticity\n\n# Create vectors that will record when the turning point occurs and when the simulation ends\ntp = rep(NA, S)\nend = rep(NA, S)\n\n# Initialise such that there is surplus labour (L1 > lambda)\nL1[,1]= 0.9*L\nL2[,1]= L - L1[,1]\n\n# Simulate the model by looping over T time periods for S different scenarios\nfor (i in 1:S){\n  \n  # Create flag that will be set to TRUE when the turning point has been reached\n  cond = FALSE\n  \n  # Inititalise time index\n  t = 2\n  \n  # Run the model as long as the number of periods Q hasn't been reached yet and employment in sector 1 is positive \n  while (t <= Q && L1[i, t-1] > 0) {\n    \n   for (iterations in 1:1000){ \n      \n      ## Model equations\n      # Output sector1 and wages sector 2\n      if (!cond && L1[i, t-1] > lambda) {\n      Y1[i,t] = lambda^alpha\n      w2[i,t]= w1[i,t]*(1 + rho)\n      }\n      else{\n      Y1[i,t] = (L1[i,t]^alpha)\n      w2[i,t]= gamma[i,t]*L2[i,t]\n      cond = TRUE # set the flag to TRUE once the condition is violated \n                  #(this prevents the iterations loop from getting trapped between the two conditions)\n      }\n\n      # Employment sector 1\n      L1[i,t] = L - L2[i,t]\n     \n      # Output sector 2\n      Y2[i,t]=(L2[i,t]^beta)*(K[i,t]^(1-beta))\n\n      # MPL sector 2\n      MPL2[i,t] = beta* (Y2[i, t]/L2[i, t]) \n            \n      # Employment sector 2 \n      L2[i,t] =L2[i, t-1] + delta*(MPL2[i,t-1] - w2[i,t-1])\n      \n      # Profits sector 2\n      P2[i,t]=Y2[i,t] - w2[i,t]*L2[i,t]\n      \n      # Capital accumulation sector 2\n      K[i,t]= K[i,t-1] + P2[i,t-1]\n\n    } # close iterations loop\n    \n      if (L1[i, t] > lambda) {\n        tp[i] = t # record when turning point occurs\n      }\n    \n      if (L1[i, t] <= 0) {\n        end[i] = t # record when L1 becomes non-positive, which terminates the simulation\n      }\n    \n    # Update time index  \n     t = t + 1\n\n  } # close time loop\n} # close scenarios loop\n\n# Calculate profits in S1\nP1=Y1 - w1*L1\n\n#Calculate aggregate profit share \nPS=(P1 + P2)/(Y1 + Y2)\n\n# Calculate sectoral profit shares\nPS1=(P1)/(Y1)\nPS2=(P2)/(Y2)\n```\n:::\n\n\n\n::: {.callout-note collapse=\"true\" title=\"Python code\"}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\n\n# Set number of periods\nQ = 250\n\n# Set number of scenarios (including baseline)\nS = 3\n\n# Set period in which shock/shift will occur\ns = 1\n\n# Create (S x Q)-matrices that will contain the simulated data\nY1 = np.ones((S, Q))  # Output in sector 1 (traditional)\nY2 = np.ones((S, Q))  # Output in sector 2 (modern)\nL1 = np.ones((S, Q))  # Employment in sector 1\nL2 = np.ones((S, Q))  # Employment in sector 2\nw2 = np.ones((S, Q))  # Real wage sector 2\nMPL2 = np.ones((S, Q))  # Marginal product of labour in sector 2\nK = np.ones((S, Q))  # Capital stock (only in sector 2)\nP2 = np.ones((S, Q))  # Profits in sector 2\n\n# Set fixed parameter values\nalpha = 0.9  # Labour elasticity of output, sector 1\nrho = 1  # Wage premium\nL = 20  # Total labour supply (exogenous)\nlambda_ = 10  # Employment at which MPL in sector 1 becomes zero\nbeta = 0.7  # Labour elasticity of output, sector 2\ndelta = 0.5  # Sensitivity of employment in sector 2 to deviation of MPL2 from w2\n\n# Set baseline parameter values\nw1 = np.full((S, Q), 0.4)  # Subsistence real wage sector 1\ngamma = np.full((S, Q), 0.12)  # Labour supply coefficient, sector 2\n\n# Set parameter values for different scenarios\nw1[1, s:Q] = 0.3  # Scenario 2: fall in subsistence wage\ngamma[2, s:Q] = 0.17  # Scenario 3: rise in labour supply elasticity\n\n# Create vectors that will record when the turning point occurs and when the simulation ends\ntp = np.full(S, np.nan)\nend = np.full(S, np.nan)\n\n# Initialise such that there is surplus labour (L1 > lambda)\nL1[:, 0] = 0.9 * L\nL2[:, 0] = L - L1[:, 0]\n\n# Simulate the model by looping over time periods for different scenarios\nfor i in range(S):\n    cond = False  # Flag for turning point condition\n    t = 1  # Initialize time index (Python uses 0-based indexing)\n\n    # Run the model as long as Q periods haven't been reached and employment in sector 1 is positive\n    while t < Q and L1[i, t-1] > 0:\n        for _ in range(1000):  # Iterations loop\n            # Model equations for output sector 1 and wages sector 2\n            if not cond and L1[i, t-1] > lambda_:\n                Y1[i, t] = lambda_**alpha\n                w2[i, t] = w1[i, t] * (1 + rho)\n            else:\n                Y1[i, t] = L1[i, t]**alpha\n                w2[i, t] = gamma[i, t] * L2[i, t]\n                cond = True  # Set flag once condition is violated\n\n            # Employment sector 1\n            L1[i, t] = L - L2[i, t]\n\n            # Output sector 2\n            Y2[i, t] = (L2[i, t]**beta) * (K[i, t]**(1 - beta))\n\n            # MPL sector 2\n            MPL2[i, t] = beta * (Y2[i, t] / L2[i, t])\n\n            # Employment sector 2\n            L2[i, t] = L2[i, t-1] + delta * (MPL2[i, t-1] - w2[i, t-1])\n\n            # Profits sector 2\n            P2[i, t] = Y2[i, t] - w2[i, t] * L2[i, t]\n\n            # Capital accumulation sector 2\n            K[i, t] = K[i, t-1] + P2[i, t-1]\n\n        # Record turning point\n        if L1[i, t] > lambda_:\n            tp[i] = t\n\n        # Record when L1 becomes non-positive\n        if L1[i, t] <= 0:\n            end[i] = t\n\n        # Update time index\n        t += 1\n\n# Calculate profits in sector 1\nP1 = Y1 - w1 * L1\n\n# Calculate aggregate profit share\nPS = (P1 + P2) / (Y1 + Y2)\n\n# Calculate sectoral profit shares\nPS1 = P1 / Y1\nPS2 = P2 / Y2\n\n```\n:::\n\n\n:::\n\n### Plots\n\n@fig-output - @fig-capacc display the model's dynamics under the baseline scenario. The red vertical line marks the 'Lewis turning point', which is the period in which the surplus labour in the traditional sector is depleted $(L_{1t}<\\lambda)$. It can be seen that before the Lewis turning point is reached, output in the modern sector grows exponentially thanks to the availability of cheap surplus labour whose employment comes with rising profits. After the turning point, output continues to increase but at a lower rate. This is because as the surplus labour in the traditional sector is depleted, the modern sector faces an upward-sloping labour supply curve. As a result, real wages increase and profits are reduced. This slows down capital accumulation and growth. In the traditional sector, output falls after the turning point as the sector now faces diminishing marginal return to labour.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set start and end periods for plots\nTmax=50\nTmin=2\n\n#Output in the two sectors, baseline\nplot(Y1[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlab=\"\", ylab=\"Y\", ylim=range(Y1[1, Tmin:Tmax],Y2[1, Tmin:Tmax])) \ntitle(main=\"Output in traditional (Y1) and modern (Y2) sector\", xlab = 'Time',cex=0.8 ,line=2)\nlines(Y2[1, Tmin:Tmax],lty=2)\nabline(v = tp[1], col = \"darkred\")\nlegend(\"topleft\", legend=c(expression(Y[1]), expression(Y[2])),\n       lty=1:2, cex=0.8, bty = \"n\", y.intersp=0.8)\n\n```\n\n::: {.cell-output-display}\n![Output in traditional (Y1) and modern (Y2) sector](a_Lewis_model_files/figure-html/fig-output-1.png){#fig-output width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Employment in the two sectors, baseline\nplot(L1[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlab=\"\", ylab=\"L\", ylim=range(L1[1, Tmin:Tmax],L2[1, Tmin:Tmax])) \ntitle(main=\"Employment in traditional (L1) and modern (L2) sector\", xlab = 'Time',cex=0.8 ,line=2)\nlines(L2[1, Tmin:Tmax],lty=2)\nabline(v = tp[1], col = \"darkred\")\nlegend(\"right\", legend=c(expression(L[1]), expression(L[2])),\n       lty=1:2, cex=0.8, bty = \"n\", y.intersp=0.8)\n\n```\n\n::: {.cell-output-display}\n![Employment in traditional (L1) and modern (L2) sector](a_Lewis_model_files/figure-html/fig-employment-1.png){#fig-employment width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Profits and capital accumulation in manufacturing, baseline\nplot(P2[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlab=\"\", ylab=\"\", ylim=range(P2[1, Tmin:Tmax])) \ntitle(main=\"Capital accumulation and profits in modern sector\", ylab = expression(P[2]), xlab = 'Time', cex=0.8, line=2)\nabline(v = tp[1], col = \"darkred\")\npar(mar = c(5, 4, 4, 4) + 0.3)\npar(new = TRUE)\nplot(K[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=2, font.main=1,cex.main=1,ylab = '', axes=FALSE,\n     xlab = '',ylim = range(K[1, Tmin:Tmax]),cex.axis=1,cex.lab=0.75)\naxis(side = 4, at = pretty(range(K[1, Tmin:Tmax])))  \nmtext(expression(K[2]), side = 4, line = 2)\nlegend(\"bottomright\", legend=c(expression(P[2]), expression(K[2])),\n       lty=1:2, cex=0.8, bty = \"n\", y.intersp=0.8)\n\n```\n\n::: {.cell-output-display}\n![Capital accumulation and profits in modern sector](a_Lewis_model_files/figure-html/fig-capacc-1.png){#fig-capacc width=672}\n:::\n:::\n\n\n@fig-wage and @fig-profshare illustrate the distributional implications of the model. Before the Lewis turning point, the profit share of the modern sector increases, as firms benefit from a real wage that is fixed below the marginal product of labour. After the turning point, real wages jump upwards and begin to increase further, gradually closing the gap with the marginal product. As a result, the profit share falls and embarks on a downward convergence to the level implied by the marginal product of labour.^[In equilibrium, where $L_{2t} - L_{2t-1} =0$, the real wage $w_2$ will be equal to the MPL in sector 2. The profit share is then constant and given by $\\frac{P{_2}}{Y{_2}} = 1-\\beta$.] The aggregate profit share broadly displays an inverted U-shaped pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Real wage and profit share in manufacturing\nplot(PS2[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlab=\"\", ylab=\"\", xlim=range(Tmin:Tmax), ylim=range(PS2[1, Tmin:Tmax])) \ntitle(main=\"Profit share and real wage in modern sector\",ylab = expression(pi[2]), xlab = 'Time', cex=0.8, line=2)\nabline(v = tp[1], col = \"darkred\")\npar(mar = c(5, 4, 4, 4) + 0.3)\npar(new = TRUE)\nplot(w2[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=2, font.main=1,cex.main=1,ylab = '', axes=FALSE, xlim=range(0:Tmax),\n     xlab = '', ylim = range(w2[1, Tmin:Tmax]), cex.axis=1,cex.lab=0.75)\naxis(side = 4, at = pretty(range(w2[1, Tmin:Tmax])))  \nmtext(expression(w[2]), side = 4, line = 2)\nlegend(\"topleft\", legend=c(expression(pi[2]), expression(w[2])),\n       lty=1:2, cex=0.8, bty = \"n\", y.intersp=0.8)\n\n```\n\n::: {.cell-output-display}\n![Real wage and profit share in modern sector](a_Lewis_model_files/figure-html/fig-wage-1.png){#fig-wage width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate profit share\nplot(PS[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlab=\"\", ylab=expression(pi), xlim=range(Tmin:Tmax), ylim=range(PS[1, Tmin:Tmax])) \ntitle(main=\"Aggregate profit share\",ylab = '', xlab = 'Time', cex=0.8, line=2)\nabline(v = tp[1], col = \"darkred\")\n\n```\n\n::: {.cell-output-display}\n![Aggregate profit share](a_Lewis_model_files/figure-html/fig-profshare-1.png){#fig-profshare width=672}\n:::\n:::\n\n\n@fig-scen2 compares output dynamics in the modern sector for the baseline scenario with scenario 2 in which the subsistence wage $w^s$ is fixed at a lower level and with scenario 3 in which the labour supply elasticity $\\gamma$ the modern sector faces after the turning point is higher. It can be seen that for a lower subsistence wage, the modern sector grows faster and the Lewis turning point is reached earlier. For a higher labour supply elasticity, the labour supply curve after the turning point is steeper, which leads to a faster increase in the real wage, a stronger squeeze of profits, and thus slower output growth. These results illustrate the Classical nature of the model, whereby capital accumulation is driven by profits. Thus, any reduction in profits slows down the growth process.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTmax=60\nplot(Y2[1, Tmin:Tmax],type=\"l\", col=1, lwd=2, lty=1, xlim=range(Tmin:Tmax), xlab=\"\", ylab=expression(Y[2]), ylim=range(Y2[1, Tmin:Tmax],Y2[2, Tmin:Tmax])) \ntitle(main=\"Output in  modern sector\", xlab = 'Time',cex=0.8 ,line=2)\nlines(Y2[2, Tmin:Tmax],lty=2)\nlines(Y2[3, Tmin:Tmax],lty=3)\nabline(v = tp[1], col = \"darkred\")\nabline(v = tp[2], col = \"red\")\nlegend(\"bottomright\", legend=c(\"1: baseline\", \"2: lower subsistence wage\", \"3: higher labour supply elasticity\"),\n       lty=1:3, cex=0.8, bty = \"n\", y.intersp=0.8)\n```\n\n::: {.cell-output-display}\n![Output in modern sector under different scenarios](a_Lewis_model_files/figure-html/fig-scen2-1.png){#fig-scen2 width=672}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\" title=\"Python code\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\n### Plots (here only for output)\nimport matplotlib.pyplot as plt\n\n# Set start and end periods for plots (set as integers)\nTmax = int(end[0] -2)\nTmin = int(2)\n\n# Output in the two sectors, baseline\nplt.plot(range(Tmin, Tmax + 1), Y1[0, Tmin:Tmax + 1], 'k-', linewidth=2, label='Y1')\nplt.plot(range(Tmin, Tmax + 1), Y2[0, Tmin:Tmax + 1], 'k--', linewidth=2, label='Y2')\n\n# Highlight Lewis turning point\nplt.axvline(x=tp[0], color='darkred', linestyle='-')\n\n# Set plot labels and title\nplt.title('Output in traditional (Y1) and modern (Y2) sector')\nplt.xlabel('Time')\nplt.ylabel('Y')\nplt.ylim(min(Y1[0, Tmin:Tmax]), max(Y2[0, Tmin:Tmax]))\n\n# Add legend\nplt.legend(loc='upper left')\n\n# Show the plot\nplt.show()\n```\n:::\n\n\n:::\n\n## Directed graph\n\nAnother perspective on the model's properties is provided by its directed graph. A directed graph consists of a set of nodes that represent the variables of the model. Nodes are connected by directed edges. An edge directed from a node $x_1$ to node $x_2$ indicates a causal impact of $x_1$ on $x_2$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Create directed graph\n# Construct auxiliary Jacobian matrix for 9 variables: \n\n#              Y1,Y2,L1,L2,w1,w2,P2,K, MPL2\nM_mat=matrix(c(0, 0, 1, 0, 0, 0, 0, 0, 0,\n               0, 0, 0, 1, 0, 0, 0, 1, 0,\n               0, 0, 0, 1, 0, 0, 0, 0, 0, \n               0, 0, 0, 0, 0, 1, 0, 0, 1, \n               0, 0, 0, 0, 0, 0, 0, 0, 0,\n               0, 0, 0, 0, 1, 0, 0, 0, 0,\n               0, 1, 0, 1, 0, 1, 0, 0, 0,\n               0, 0, 0, 0, 0, 0, 1, 0, 0,\n               0, 1, 0, 1, 0, 0, 0, 0, 0), 9, 9, byrow=TRUE)\n\n# Create adjacency matrix from transpose of auxiliary Jacobian \nA_mat=t(M_mat)\n\n# Create directed graph from adjacency matrix\nlibrary(igraph)\ndg= graph_from_adjacency_matrix(A_mat, mode=\"directed\", weighted= NULL)\n\n# Define node labels\nV(dg)$name=c(expression(Y[1]), expression(Y[2]), expression(L[1]), expression(L[2]), \n             expression(w[1]), expression(w[2]), expression(P[2]), \"K\", \"MPL\")\n\n# Plot directed graph\nplot(dg, main=\"Directed Graph of Lewis Model\", vertex.size=20, vertex.color=\"lightblue\", \n     vertex.label.color=\"black\", edge.arrow.size=0.3, edge.width=1.1, edge.size=1.2,\n     edge.arrow.width=1.2, edge.color=\"black\", vertex.label.cex=1.2, \n     vertex.frame.color=\"NA\", margin=-0.08)\n```\n\n::: {.cell-output-display}\n![](a_Lewis_model_files/figure-html/lewisDAG-2.png){width=672}\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\" title=\"Python code\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Create directed graph\nimport networkx as nx\n\n# Create the adjacency matrix (M_mat in R)\nM_mat = np.array([[0, 0, 1, 0, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 1, 0, 0, 0, 1, 0],\n                  [0, 0, 0, 1, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 0, 0, 1, 0, 0, 1],\n                  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 0, 1, 0, 0, 0, 0],\n                  [0, 1, 0, 1, 0, 1, 0, 0, 0],\n                  [0, 0, 0, 0, 0, 0, 1, 0, 0],\n                  [0, 1, 0, 1, 0, 0, 0, 0, 0]])\n\n# Transpose the matrix to get A_mat\nA_mat = M_mat.transpose()\n\n# Create a directed graph from the adjacency matrix using networkx\nG = nx.DiGraph(A_mat)\n\n# Define the node labels as expressions for plotting\nnodelabs  = {0: r'$Y_1$', 1: r'$Y_2$', 2: r'$L_1$', 3: r'$L_2$', \n          4: r'$w_1$', 5: r'$w_2$', 6: r'$P_2$', 7: 'K', 8: 'MPL'}\n\n# Plot the graph\npos = nx.spring_layout(G, k=0.4)\nnx.draw_networkx(G, pos, node_size=200, node_color=\"lightblue\", \n                 edge_color=\"black\", width=1.2, arrowsize=10, \n                 arrowstyle='->', font_size=8, font_color=\"black\",\n                 with_labels=True, labels=nodelabs)\nplt.axis(\"off\")\nplt.title(\"Directed Graph of Lewis Model\")\nplt.show()\n```\n:::\n\n\n:::\n\n\nThe directed graph illustrates that the subsistence wage in the traditional sector $w_1=w^s$ is the key exogenous variables that impact the dynamics of growth and distribution via its effect on real wages in the modern sector. Employment, output, profits, and capital accumulation in the modern sector form a closed loop (or cycle) within the system. The traditional sector plays a residual role.\n\n## Analytical discussion\nLet us analyse the dynamic stability of the model before the Lewis turning point, i.e. for the case where $(L_{1t}>\\lambda)$ such that $w_2$ is exogenous. Combining @eq-lewis_L2 and @eq-lewis_MPL yields a first-order difference equation for $L_2$, and combining @eq-lewis_K2, @eq-lewis_P2, and @eq-lewis_L2, yields a first-order difference equation for $K_2$:\n\n$$\nL_{2t}= L_{2t-1} + \\delta(\\beta L_{2t-1}^{\\beta -1}K_{2t-1}^{1-\\beta} - w_{2})\n$$\n$$\nK_{2t}=K_{2t-1} + L_{2t-1}^\\beta K_{2t-1}^{1-\\beta} - wL_{2t-1}\n$$\nThe Jacobian matrix is given by: \n\n$$\nJ(L_2, K_2)=\\begin{bmatrix} 1+ \\delta\\beta (\\beta-1) L_{2t-1}^{\\beta-2} K_{2t-1}^{1-\\beta}   &\\delta\\beta (1-\\beta) L_{2t-1}^{\\beta-1} K_{2t-1}^{-\\beta} \\\\ \\beta L_{2t-1}^{\\beta-1} K_{2t-1}^{1-\\beta} -w & 1+ (1-\\beta) L_{2t-1}^{\\beta} K_{2t-1}^{-\\beta} \\end{bmatrix}.\n$$\n\nFor the system to be stable, both eigenvalues of the Jacobian need to be inside the unit circle. This requires the following three conditions to hold:\n\n$$\n1+tr(J)+det(J)>0\n$$ \n$$\n1-tr(J)+det(J)>0\n$$ \n$$\n1-det(J)>0,\n$$ \nwhere $tr(J)$ is the trace and $det(J)$ is the determinant of the Jacobian.\n\nWith $tr(J)$ clearly positive, let us focus on $1-tr(J)+det(J)>0$. Plugging in $tr(J)$ and $det(J)$ and simplifying yields:\n\n$$\nw_2 - \\frac{Y_{2t-1}}{L_{2t-1}}>0.\n$$\nAs long as the real wage is below the average product of labour, $\\frac{Y_{2}}{L_{2}}$, the condition will be violated, as there are positive profits and thus capital accumulation. With the real wage being lower or equal to the marginal product of labour, this is indeed the case. The system is then dynamically unstable and will generate exponential growth. \n\nWe can check this stability analysis numerically:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Examine stability before the turning point (here for the baseline scenario only)\n\n# Construct Jacobian matrix before the turning point \nJ=matrix(c(1 + delta*beta*(beta-1)*(L2[1,tp[1]-1]^(beta-2))*(K[1,tp[1]-1]^(1-beta)), \n           delta*beta*(1-beta)*(L2[1,tp[1]-1]^(beta-1))*(K[1,tp[1]-1]^(-beta)),\n           beta*(L2[1,tp[1]-1]^(beta-1))*(K[1,tp[1]-1]^(1-beta)) - w2[1,tp[1]-1],\n           1 + (1-beta)*(L2[1,tp[1]-1]^(beta))*(K[1,tp[1]-1]^(-beta))), \n          2, 2, byrow=TRUE)\n\n# Obtain eigenvalues\nev=eigen(J)\n(values = ev$values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.0552484 0.9580697\n```\n\n\n:::\n\n```{.r .cell-code}\n# Obtain determinant and trace\n(det=det(J))      # determinant\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.011002\n```\n\n\n:::\n\n```{.r .cell-code}\n(tr=sum(diag(J))) # trace\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.013318\n```\n\n\n:::\n\n```{.r .cell-code}\n#Check stability conditions\nprint(1+tr+det>0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(1-tr+det>0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(1-det>0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check simplified stability condition\nprint(w2[1,(tp[1]-1)] - Y2[1,(tp[1]-1)]/L2[1,(tp[1]-1)] >0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\" title=\"Python code\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\n### Examine stability before the turning point (here for the baseline scenario only)\n\n# Set turning point as integer\ntp = tp.astype(int)  \n\n# Construct Jacobian matrix before the turning point \nJ = np.array([\n    [1 + delta * beta * (beta - 1) * (L2[0, tp[0]-1] ** (beta - 2)) * (K[0, tp[0]-1] ** (1 - beta)),\n     delta * beta * (1 - beta) * (L2[0, tp[0]-1] ** (beta - 1)) * (K[0, tp[0]-1] ** (-beta))],\n    [beta * (L2[0, tp[0]-1] ** (beta - 1)) * (K[0, tp[0]-1] ** (1 - beta)) - w2[0, tp[0]-1],\n     1 + (1 - beta) * (L2[0, tp[0]-1] ** beta) * (K[0, tp[0]-1] ** (-beta))]\n])\n\n# Obtain eigenvalues\neigenvalues, eigenvectors = np.linalg.eig(J)\nprint(eigenvalues)\n\n# Obtain determinant and trace\ndet = np.linalg.det(J)\ntr = np.trace(J)\n\n# Check general stability conditions\nprint(1+tr+det>0)\nprint(1-tr+det>0)\nprint(1-det>0)\n\n# Check simplified stability condition\nprint(w2[0, tp[0]-1] - Y2[0, tp[0]-1] / L2[0, tp[0]-1] > 0)\n```\n:::\n\n\n:::\n\n## References\n",
    "supporting": [
      "a_Lewis_model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}